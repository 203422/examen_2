
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN DIVIDE DO DOT ENDDO ENDWHILE EQUAL IDENTIFIER INT LPAREN MINUS NUMBER PLUS RPAREN SEMICOLON TIMES WHILE\n    program : declarations DO statements ENDDO while_statement ENDWHILE\n    \n    declarations : declarations declaration\n                 | declaration\n    \n    declaration : INT IDENTIFIER ASSIGN NUMBER SEMICOLON\n    \n    statements : statements statement\n               | statement\n    \n    statement : IDENTIFIER ASSIGN expression SEMICOLON\n    \n    expression : expression PLUS term\n               | expression MINUS term\n               | term\n    \n    term : term TIMES factor\n         | term DIVIDE factor\n         | factor\n    \n    factor : NUMBER\n           | IDENTIFIER\n    \n    while_statement : WHILE LPAREN condition RPAREN\n    \n    condition : INT IDENTIFIER EQUAL NUMBER\n    '
    
_lr_action_items = {'INT':([0,2,3,6,23,25,],[4,4,-3,-2,-4,32,]),'$end':([1,24,],[0,-1,]),'DO':([2,3,6,23,],[5,-3,-2,-4,]),'IDENTIFIER':([4,5,8,9,13,14,26,27,28,29,30,32,],[7,10,10,-6,-5,18,-7,18,18,18,18,38,]),'ASSIGN':([7,10,],[11,14,]),'ENDDO':([8,9,13,26,],[12,-6,-5,-7,]),'NUMBER':([11,14,27,28,29,30,39,],[15,22,22,22,22,22,40,]),'WHILE':([12,],[17,]),'SEMICOLON':([15,18,19,20,21,22,33,34,35,36,],[23,-15,26,-10,-13,-14,-8,-9,-11,-12,]),'ENDWHILE':([16,37,],[24,-16,]),'LPAREN':([17,],[25,]),'TIMES':([18,20,21,22,33,34,35,36,],[-15,29,-13,-14,29,29,-11,-12,]),'DIVIDE':([18,20,21,22,33,34,35,36,],[-15,30,-13,-14,30,30,-11,-12,]),'PLUS':([18,19,20,21,22,33,34,35,36,],[-15,27,-10,-13,-14,-8,-9,-11,-12,]),'MINUS':([18,19,20,21,22,33,34,35,36,],[-15,28,-10,-13,-14,-8,-9,-11,-12,]),'RPAREN':([31,40,],[37,-17,]),'EQUAL':([38,],[39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declarations':([0,],[2,]),'declaration':([0,2,],[3,6,]),'statements':([5,],[8,]),'statement':([5,8,],[9,13,]),'while_statement':([12,],[16,]),'expression':([14,],[19,]),'term':([14,27,28,],[20,33,34,]),'factor':([14,27,28,29,30,],[21,21,21,35,36,]),'condition':([25,],[31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarations DO statements ENDDO while_statement ENDWHILE','program',6,'p_program','app.py',78),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','app.py',84),
  ('declarations -> declaration','declarations',1,'p_declarations','app.py',85),
  ('declaration -> INT IDENTIFIER ASSIGN NUMBER SEMICOLON','declaration',5,'p_declaration','app.py',94),
  ('statements -> statements statement','statements',2,'p_statements','app.py',103),
  ('statements -> statement','statements',1,'p_statements','app.py',104),
  ('statement -> IDENTIFIER ASSIGN expression SEMICOLON','statement',4,'p_statement','app.py',113),
  ('expression -> expression PLUS term','expression',3,'p_expression','app.py',124),
  ('expression -> expression MINUS term','expression',3,'p_expression','app.py',125),
  ('expression -> term','expression',1,'p_expression','app.py',126),
  ('term -> term TIMES factor','term',3,'p_term','app.py',135),
  ('term -> term DIVIDE factor','term',3,'p_term','app.py',136),
  ('term -> factor','term',1,'p_term','app.py',137),
  ('factor -> NUMBER','factor',1,'p_factor','app.py',146),
  ('factor -> IDENTIFIER','factor',1,'p_factor','app.py',147),
  ('while_statement -> WHILE LPAREN condition RPAREN','while_statement',4,'p_while_statement','app.py',159),
  ('condition -> INT IDENTIFIER EQUAL NUMBER','condition',4,'p_condition','app.py',165),
]
